/*
 本题最简单的做法就是阶乘以后再循环除以10，求余有0加1，这样就可以求出0的个数
 但是这种方法必超时

 题解中的思路就是求2，5的个数，一个 2*5组合就会有一个10，也就是一个0
 又因为从1 ~ 10，只有 1 个 5， 但是可以化出很多 2 ，（2 = 1 * 2， 4 = 2 * 2）
 这样就转换成了 n 中有几个 5 的问题， 即 n/5
 由于 5^2, 5^3这种数存在就会导致多出来一个5
 所以每次遇到这种数就需要多除以5一次
*/

class Solution {
public:
    int trailingZeroes(int n) {
        int count = 0;
        while (n > 0)
        {
            n /= 5;
            count += n;
        }

        return count;
    }
};